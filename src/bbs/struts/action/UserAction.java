/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package bbs.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.actions.DispatchAction;

import bbs.biz.UserBiz;
import bbs.entity.User;
import bbs.struts.form.UserForm;

public class UserAction extends DispatchAction {
	ActionMessages errors = new ActionMessages();

	//用户登录
	public ActionForward doLogin(ActionMapping mapping, ActionForm form,

		HttpServletRequest request, HttpServletResponse response) {
		UserForm userForm = (UserForm) form;

		String userName = userForm.getUserName(); //获取用户名
		String userPwd = userForm.getUserPwd(); //获取密码

		UserBiz userBiz = new UserBiz();
		HttpSession session = request.getSession(); //创建session对象实例
		
		User user = (User)session.getAttribute("LoginedUser"); //获取session中的登录用户
		if (user != null) { //判断session是否包含用户
			if(user.getUserName().equals(userName)){
				errors.clear();
				errors.add("UserInfo",new ActionMessage("info.login.logined"));
				super.saveErrors(request, errors);
				return mapping.findForward("LoginedUser");
			}
			session.removeAttribute("LoginedUser"); //删除session已存在的登录用户
		}
		
		user = userBiz.doLogin(userName, userPwd);
		if (user != null) {
			session.setAttribute("LoginedUser", user); //保存用户信息到session
			errors.clear();
			errors.add("UserInfo",new ActionMessage("info.login.success"));
			super.saveErrors(request, errors);
			return mapping.findForward("logined"); //跳转到首页
		} else {
			errors.clear();
			errors.add("LoginInfo",new ActionMessage("error.login.dologin"));
			super.saveErrors(request, errors);
			return mapping.findForward("toLogin");
		}
	}
	//用户注销
	public ActionForward doLoginout(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
			HttpSession session = request.getSession(); //创建session对象实例
			session.removeAttribute("LoginedUser");
			return mapping.findForward("toLogin");
		
	}
	//用户注册
	public ActionForward doRegister(ActionMapping mapping, ActionForm form,
		HttpServletRequest request, HttpServletResponse response) {
		UserBiz userBiz = new UserBiz();
		String userName = request.getParameter("userName");
		if (userBiz.isExistUser(userName)) {
			errors.clear();
			errors.add("RegisterInfo",new ActionMessage("error.user.doRegister"));
			super.saveErrors(request, errors);
			return mapping.findForward("toRegister");
		} else {
			String userPwd = request.getParameter("userPwd");
			boolean gender = Boolean.valueOf(request.getParameter("gender"));
			String head = request.getParameter("head");
			User regUser = new User();
			regUser.setGender(gender);
			regUser.setHead(head);
			regUser.setUserName(userName);
			regUser.setUserPwd(userPwd);
			if (!userBiz.addUser(regUser)) {
				errors.clear();
				errors.add("UserInfo",new ActionMessage("error.user.register"));
				super.saveErrors(request, errors);
				return mapping.findForward("toRegister");
			}else{
				errors.clear();
				errors.add("LoginInfo",new ActionMessage("info.register.success"));
				super.saveErrors(request, errors);
				return mapping.findForward("doLogin");
			}
		}
	}
}